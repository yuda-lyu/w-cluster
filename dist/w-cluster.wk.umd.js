!function(d,l){"object"==typeof exports&&"undefined"!=typeof module?module.exports=l(require("worker_threads")):"function"==typeof define&&define.amd?define(["worker_threads"],l):(d="undefined"!=typeof globalThis?globalThis:d||self)["w-cluster"]=l(d.worker_threads)}(this,(function(d){"use strict";"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var l={};!function(l,b){l.exports=function(d){var l={};!function(d){var l=Object.prototype.hasOwnProperty,b="~";function Z(){}function c(d,l,b){this.fn=d,this.context=l,this.once=b||!1}function X(d,l,Z,X,G){if("function"!=typeof Z)throw new TypeError("The listener must be a function");var m=new c(Z,X||d,G),y=b?b+l:l;return d._events[y]?d._events[y].fn?d._events[y]=[d._events[y],m]:d._events[y].push(m):(d._events[y]=m,d._eventsCount++),d}function G(d,l){0==--d._eventsCount?d._events=new Z:delete d._events[l]}function m(){this._events=new Z,this._eventsCount=0}Object.create&&(Z.prototype=Object.create(null),(new Z).__proto__||(b=!1)),m.prototype.eventNames=function(){var d,Z,c=[];if(0===this._eventsCount)return c;for(Z in d=this._events)l.call(d,Z)&&c.push(b?Z.slice(1):Z);return Object.getOwnPropertySymbols?c.concat(Object.getOwnPropertySymbols(d)):c},m.prototype.listeners=function(d){var l=b?b+d:d,Z=this._events[l];if(!Z)return[];if(Z.fn)return[Z.fn];for(var c=0,X=Z.length,G=new Array(X);c<X;c++)G[c]=Z[c].fn;return G},m.prototype.listenerCount=function(d){var l=b?b+d:d,Z=this._events[l];return Z?Z.fn?1:Z.length:0},m.prototype.emit=function(d,l,Z,c,X,G){var m=b?b+d:d;if(!this._events[m])return!1;var y,K,W=this._events[m],p=arguments.length;if(W.fn){switch(W.once&&this.removeListener(d,W.fn,void 0,!0),p){case 1:return W.fn.call(W.context),!0;case 2:return W.fn.call(W.context,l),!0;case 3:return W.fn.call(W.context,l,Z),!0;case 4:return W.fn.call(W.context,l,Z,c),!0;case 5:return W.fn.call(W.context,l,Z,c,X),!0;case 6:return W.fn.call(W.context,l,Z,c,X,G),!0}for(K=1,y=new Array(p-1);K<p;K++)y[K-1]=arguments[K];W.fn.apply(W.context,y)}else{var I,V=W.length;for(K=0;K<V;K++)switch(W[K].once&&this.removeListener(d,W[K].fn,void 0,!0),p){case 1:W[K].fn.call(W[K].context);break;case 2:W[K].fn.call(W[K].context,l);break;case 3:W[K].fn.call(W[K].context,l,Z);break;case 4:W[K].fn.call(W[K].context,l,Z,c);break;default:if(!y)for(I=1,y=new Array(p-1);I<p;I++)y[I-1]=arguments[I];W[K].fn.apply(W[K].context,y)}}return!0},m.prototype.on=function(d,l,b){return X(this,d,l,b,!1)},m.prototype.once=function(d,l,b){return X(this,d,l,b,!0)},m.prototype.removeListener=function(d,l,Z,c){var X=b?b+d:d;if(!this._events[X])return this;if(!l)return G(this,X),this;var m=this._events[X];if(m.fn)m.fn!==l||c&&!m.once||Z&&m.context!==Z||G(this,X);else{for(var y=0,K=[],W=m.length;y<W;y++)(m[y].fn!==l||c&&!m[y].once||Z&&m[y].context!==Z)&&K.push(m[y]);K.length?this._events[X]=1===K.length?K[0]:K:G(this,X)}return this},m.prototype.removeAllListeners=function(d){var l;return d?(l=b?b+d:d,this._events[l]&&G(this,l)):(this._events=new Z,this._eventsCount=0),this},m.prototype.off=m.prototype.removeListener,m.prototype.addListener=m.prototype.on,m.prefixed=b,m.EventEmitter=m,d.exports=m}({get exports(){return l},set exports(d){l=d}});var b=l;let Z;return function(){if("nodejs"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function l(){return new b}function c(){let d,l,b=new Promise((function(){d=arguments[0],l=arguments[1]}));return b.resolve=d,b.reject=l,b}function X(){let d=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,l=[],b="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),Z=b.length;for(let c=0;c<d;c++)l[c]=b[0|Math.random()*Z];return l.join("")}let G=(m="",Buffer.from(m,"base64").toString("utf8"));var m;function y(){let b=l(),Z=function(l){try{return new d.Worker(l,{eval:!0})}catch(d){m(d)}}(G);if(!Z)return m("invalid worker"),null;function m(d){b.emit("error",d)}return Z.on("message",(function(d){let l=d,Z=l.mode;"emit"!==Z&&"return"!==Z||("emit"===Z&&b.emit(l.evName,l.msg),"return"===Z&&b.emit(l.id,l))})),Z.on("error",m),function(){let d={mode:"init",type:"object",input:[...arguments]};Z.postMessage(d)}([...arguments]),b.PCA=function(){let d=c(),l=X(),G={mode:"call",id:l,fun:"PCA",input:[...arguments]};return Z.postMessage(G),b.once(l,(l=>{"success"===l.state?d.resolve(l.msg):d.reject(l.msg)})),d},b.cluster=function(){let d=c(),l=X(),G={mode:"call",id:l,fun:"cluster",input:[...arguments]};return Z.postMessage(G),b.once(l,(l=>{"success"===l.state?d.resolve(l.msg):d.reject(l.msg)})),d},b.terminate=function(){Z?(Z.terminate(),Z=void 0):m("worker has been terminated")},b}let K={PCA:async function(){let d=[...arguments],l=y();return await l.PCA(...d).finally((()=>{l.terminate()}))},cluster:async function(){let d=[...arguments],l=y();return await l.cluster(...d).finally((()=>{l.terminate()}))}};Z=l();for(let d in K){let l=K[d];Z[d]=l}}(),Z}(d)}({get exports(){return l},set exports(d){l=d}});var b=l,Z={};!function(d,l){d.exports=function(){const d="function"==typeof atob,l="function"==typeof Buffer,b="function"==typeof TextDecoder?new TextDecoder:void 0,Z=(d=>{let l={};return d.forEach(((d,b)=>l[d]=b)),l})(("function"==typeof TextEncoder&&new TextEncoder,Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="))),c=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,X=String.fromCharCode.bind(String),G="function"==typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):d=>new Uint8Array(Array.prototype.slice.call(d,0)),m=d=>d.replace(/[^A-Za-z0-9\+\/]/g,""),y=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,K=d=>{switch(d.length){case 4:var l=((7&d.charCodeAt(0))<<18|(63&d.charCodeAt(1))<<12|(63&d.charCodeAt(2))<<6|63&d.charCodeAt(3))-65536;return X(55296+(l>>>10))+X(56320+(1023&l));case 3:return X((15&d.charCodeAt(0))<<12|(63&d.charCodeAt(1))<<6|63&d.charCodeAt(2));default:return X((31&d.charCodeAt(0))<<6|63&d.charCodeAt(1))}},W=d=>d.replace(y,K),p=d=>{if(d=d.replace(/\s+/g,""),!c.test(d))throw new TypeError("malformed base64.");d+="==".slice(2-(3&d.length));let l,b,G,m="";for(let c=0;c<d.length;)l=Z[d.charAt(c++)]<<18|Z[d.charAt(c++)]<<12|(b=Z[d.charAt(c++)])<<6|(G=Z[d.charAt(c++)]),m+=64===b?X(l>>16&255):64===G?X(l>>16&255,l>>8&255):X(l>>16&255,l>>8&255,255&l);return m},I=d?d=>atob(m(d)):l?d=>Buffer.from(d,"base64").toString("binary"):p,V=l?d=>G(Buffer.from(d,"base64")):d=>G(I(d).split("").map((d=>d.charCodeAt(0)))),h=l?d=>Buffer.from(d,"base64").toString("utf8"):b?d=>b.decode(V(d)):d=>W(I(d)),i=d=>m(d.replace(/[-_]/g,(d=>"-"==d?"+":"/"))),u=d=>h(i(d)),H=u;var s={};!function(d){var l=Object.prototype.hasOwnProperty,b="~";function Z(){}function c(d,l,b){this.fn=d,this.context=l,this.once=b||!1}function X(d,l,Z,X,G){if("function"!=typeof Z)throw new TypeError("The listener must be a function");var m=new c(Z,X||d,G),y=b?b+l:l;return d._events[y]?d._events[y].fn?d._events[y]=[d._events[y],m]:d._events[y].push(m):(d._events[y]=m,d._eventsCount++),d}function G(d,l){0==--d._eventsCount?d._events=new Z:delete d._events[l]}function m(){this._events=new Z,this._eventsCount=0}Object.create&&(Z.prototype=Object.create(null),(new Z).__proto__||(b=!1)),m.prototype.eventNames=function(){var d,Z,c=[];if(0===this._eventsCount)return c;for(Z in d=this._events)l.call(d,Z)&&c.push(b?Z.slice(1):Z);return Object.getOwnPropertySymbols?c.concat(Object.getOwnPropertySymbols(d)):c},m.prototype.listeners=function(d){var l=b?b+d:d,Z=this._events[l];if(!Z)return[];if(Z.fn)return[Z.fn];for(var c=0,X=Z.length,G=new Array(X);c<X;c++)G[c]=Z[c].fn;return G},m.prototype.listenerCount=function(d){var l=b?b+d:d,Z=this._events[l];return Z?Z.fn?1:Z.length:0},m.prototype.emit=function(d,l,Z,c,X,G){var m=b?b+d:d;if(!this._events[m])return!1;var y,K,W=this._events[m],p=arguments.length;if(W.fn){switch(W.once&&this.removeListener(d,W.fn,void 0,!0),p){case 1:return W.fn.call(W.context),!0;case 2:return W.fn.call(W.context,l),!0;case 3:return W.fn.call(W.context,l,Z),!0;case 4:return W.fn.call(W.context,l,Z,c),!0;case 5:return W.fn.call(W.context,l,Z,c,X),!0;case 6:return W.fn.call(W.context,l,Z,c,X,G),!0}for(K=1,y=new Array(p-1);K<p;K++)y[K-1]=arguments[K];W.fn.apply(W.context,y)}else{var I,V=W.length;for(K=0;K<V;K++)switch(W[K].once&&this.removeListener(d,W[K].fn,void 0,!0),p){case 1:W[K].fn.call(W[K].context);break;case 2:W[K].fn.call(W[K].context,l);break;case 3:W[K].fn.call(W[K].context,l,Z);break;case 4:W[K].fn.call(W[K].context,l,Z,c);break;default:if(!y)for(I=1,y=new Array(p-1);I<p;I++)y[I-1]=arguments[I];W[K].fn.apply(W[K].context,y)}}return!0},m.prototype.on=function(d,l,b){return X(this,d,l,b,!1)},m.prototype.once=function(d,l,b){return X(this,d,l,b,!0)},m.prototype.removeListener=function(d,l,Z,c){var X=b?b+d:d;if(!this._events[X])return this;if(!l)return G(this,X),this;var m=this._events[X];if(m.fn)m.fn!==l||c&&!m.once||Z&&m.context!==Z||G(this,X);else{for(var y=0,K=[],W=m.length;y<W;y++)(m[y].fn!==l||c&&!m[y].once||Z&&m[y].context!==Z)&&K.push(m[y]);K.length?this._events[X]=1===K.length?K[0]:K:G(this,X)}return this},m.prototype.removeAllListeners=function(d){var l;return d?(l=b?b+d:d,this._events[l]&&G(this,l)):(this._events=new Z,this._eventsCount=0),this},m.prototype.off=m.prototype.removeListener,m.prototype.addListener=m.prototype.on,m.prefixed=b,m.EventEmitter=m,d.exports=m}({get exports(){return s},set exports(d){s=d}});var L=s;let C;return function(){if("browser"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function d(){return new L}function l(){let d,l,b=new Promise((function(){d=arguments[0],l=arguments[1]}));return b.resolve=d,b.reject=l,b}function b(){let d=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,l=[],b="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),Z=b.length;for(let c=0;c<d;c++)l[c]=b[0|Math.random()*Z];return l.join("")}let Z=H("");function c(){let c=d(),X=function(d){try{let l=new Blob([d]),b=window.URL||window.webkitURL;return new Worker(b.createObjectURL(l))}catch(d){G(d)}}(Z);if(!X)return G("invalid worker"),null;function G(d){c.emit("error",d)}return X.onmessage=function(d){!function(d){let l=d,b=l.mode;"emit"!==b&&"return"!==b||("emit"===b&&c.emit(l.evName,l.msg),"return"===b&&c.emit(l.id,l))}(d.data)},X.onerror=G,function(){let d={mode:"init",type:"object",input:[...arguments]};X.postMessage(d)}([...arguments]),c.PCA=function(){let d=l(),Z=b(),G={mode:"call",id:Z,fun:"PCA",input:[...arguments]};return X.postMessage(G),c.once(Z,(l=>{"success"===l.state?d.resolve(l.msg):d.reject(l.msg)})),d},c.cluster=function(){let d=l(),Z=b(),G={mode:"call",id:Z,fun:"cluster",input:[...arguments]};return X.postMessage(G),c.once(Z,(l=>{"success"===l.state?d.resolve(l.msg):d.reject(l.msg)})),d},c.terminate=function(){X?(X.terminate(),X=void 0):G("worker has been terminated")},c}let X={PCA:async function(){let d=[...arguments],l=c();return await l.PCA(...d).finally((()=>{l.terminate()}))},cluster:async function(){let d=[...arguments],l=c();return await l.cluster(...d).finally((()=>{l.terminate()}))}};C=d();for(let d in X){let l=X[d];C[d]=l}}(),C}()}({get exports(){return Z},set exports(d){Z=d}});var c=Z;let X;return X="undefined"!=typeof window&&void 0!==window.document?c:b,X}));
